// Generated by CoffeeScript 1.6.3
(function() {
  var Observer;

  Observer = (function() {
    function Observer(instance, call) {
      this._listener = {};
      this._self = instance;
      this._call = call;
    }

    Observer.prototype._def = function(type) {
      if (!this._listener[type]) {
        this._listener[type] = [];
      }
      return this._listener[type];
    };

    Observer.prototype.add = function(type, func) {
      var events;
      events = this._def(type);
      return events[type].push(func);
    };

    Observer.prototype.remove = function(type, func) {
      var events;
      events = this._def(type);
      return events.splice(events.indexOf(func), 1);
    };

    Observer.prototype.dispatch = function(type, event) {
      var events, f, func, _i, _len;
      events = this._def(type);
      for (_i = 0, _len = events.length; _i < _len; _i++) {
        func = events[_i];
        func.call(this._self, event);
      }
      if (this._call) {
        f = this._self["on" + type];
        if (f) {
          return f.call(this._self, event);
        }
      }
    };

    return Observer;

  })();

  module.exports = Observer;

}).call(this);

/*
//@ sourceMappingURL=Observer.map
*/
